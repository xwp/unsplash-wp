name: E2E Tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  e2e:
    name: '${{ matrix.browser }} - WP ${{ matrix.wp }}'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        include:
          - browser: 'chrome'
            wp: '5.5.0'
            coverage: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # See https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix
      - name: Install libgbm1
        run: sudo apt-get install libgbm1

      - name: Setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '14'

      - name: Cache node modules
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        env:
          cache-name: cache-node-modules

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: composer:v1

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Setup Composer cache
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
            ${{ runner.os }}-

      # TODO: Remove need for `npm install puppeteer`.
      - name: Install dependencies
        run: |
          npm ci
          composer install --prefer-dist --no-suggest --no-progress --no-interaction
        env:
          CI: true
          PUPPETEER_PRODUCT: ${{ matrix.browser }}

      - name: Build plugin
        run: npm run build:js

      - name: Start Docker environment
        run: npm run env:start
        env:
          COMPOSE_INTERACTIVE_NO_CLI: true
          WP_VERSION: ${{ matrix.wp }}
          UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
          UNSPLASH_SECRET_KEY: ${{ secrets.UNSPLASH_SECRET_KEY }}
          UNSPLASH_UTM_SOURCE: ${{ secrets.UNSPLASH_UTM_SOURCE }}

      - name: Install WordPress
        run: |
          npm run wp -- wp core install --title=WordPress --admin_user=admin --admin_password=password --admin_email=admin@example.com --skip-email --url=http://localhost:8088 --quiet
          npm run wp -- wp plugin activate unsplash
          docker-compose exec -T wordpress bash -c "mkdir -p /var/www/html/wp-content/uploads && chown -R www-data:www-data /var/www/html/wp-content/uploads" # ensure the uploads folder is writable

      - name: Run E2E tests with coverage
        run: npm run test:e2e:coverage

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./tests/coverage/e2e/lcov.info
          flag-name: "E2E Tests"
          parallel: true

      - name: Stop Docker environment
        run: npm run env:stop
        if: always()
        env:
          COMPOSE_INTERACTIVE_NO_CLI: true
